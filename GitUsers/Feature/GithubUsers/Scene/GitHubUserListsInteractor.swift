//
//  GitHubUserListsInteractor.swift
//  GitUsers
//
//  Created by Teravat Nepiyachat on 5/4/2564 BE.
//  Copyright (c) 2564 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol IGitHubUserListsInteractor {
	func getUsers(request: GetGitHubUsers.Request)
	func setFavoriteUser(request: SetFavoriteUser.Request)
	func selectedGithubUser(request: SelectedGitHubUser.Request)
}

struct GitHubUserListsInteractor {
	
	let presenter: IGitHubUserListsPresenter
	let worker: IGitHubUserListsWorker
	
	init(presenter: IGitHubUserListsPresenter, worker: IGitHubUserListsWorker) {
		self.presenter = presenter
		self.worker = worker
	}
	
}

// MARK: - IGitHubUserListsInteractor

extension GitHubUserListsInteractor: IGitHubUserListsInteractor {
	func getUsers(request: GetGitHubUsers.Request) {
		presenter.present(loadingView: ShowLoading.Response(isShowLoading: true))
		worker.getGitHubUsers { response in
			switch response {
			case .success(let datas):
				self.presenter.present(users: GetGitHubUsers.Response(githubUsersModel: datas))
			case .failure(let error):
				self.presenter.present(error: error)
			}
			self.presenter.present(loadingView: ShowLoading.Response(isShowLoading: false))
		}
	}
	
	func setFavoriteUser(request: SetFavoriteUser.Request) {
		worker.setFavoriteUser(with: request.id) {
			self.presenter.present(setFavorite: SetFavoriteUser.Response(index: request.index, isFavorite: request.isFavorite))
		}
	}
	
	func selectedGithubUser(request: SelectedGitHubUser.Request) {
		worker.getGithubUserDetail(at: request.index) { result in
			self.presenter.present(userDetail: SelectedGitHubUser.Response(githubUserModel: result))
		}
	}
}
