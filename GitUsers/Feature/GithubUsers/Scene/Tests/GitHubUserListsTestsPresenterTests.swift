//
//  GitHubUserListsTestsPresenterTests.swift
//  GitUsers
//
//  Created by Teravat Nepiyachat on 8/4/2564 BE.
//  Copyright (c) 2564 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import GitUsers
import XCTest

class GitHubUserListsTestsPresenterTests: XCTestCase {
	
	var presenter: GitHubUserListsPresenter!
	var viewController: MockGitHubUserListsViewControllerTests!
	
	override func setUp() {
		viewController = MockGitHubUserListsViewControllerTests()
		presenter = GitHubUserListsPresenter(viewController: viewController)
		super.setUp()
	}
	
	override func tearDown() {
		viewController = nil
		presenter = nil
		super.tearDown()
	}
	
	func testPresenterShouldPresentUsersList() {
		// given
		let response = GetGitHubUsers.Response(githubUsersModel: [GitHubUserListsModel()])
		
		// when
		presenter.present(users: response)
		
		// then
		XCTAssertEqual(viewController.showUsersCalled, 1, "presenter should call viewController show github user lists")
	}
	
	func testPresenterShouldPresentSetFavoriteUser() {
		// given
		let response = SetFavoriteUser.Response(index: 1, isFavorite: true)
		
		// when
		presenter.present(setFavorite: response)
		
		// then
		XCTAssertEqual(viewController.showSetFavoriteCalled, 1, "presenter should call viewController show set favorite github user")
	}
	
	func testPresenterShouldPresentUserDetail() {
		// given
		let response = SelectedGitHubUser.Response(githubUserModel: GitHubUserListsModel())
		
		// when
		presenter.present(userDetail: response)
		
		// then
		XCTAssertEqual(viewController.showUserDetailCalled, 1, "presenter should call viewController show github user detail")
	}
	
	func testPresenterShouldPresentFavoriteFilter() {
		// given
		let response = SelectedFavoriteFilter.Response(githubUsersModel: [GitHubUserListsModel()])
		
		// when
		presenter.present(favoriteFilter: response)
		
		// then
		XCTAssertEqual(viewController.showFavoriteFilterActiveCalled, 1, "presenter should call viewController show github user with favorite filter active")
	}
	
	func testPresenterShouldPresentSortData() {
		// given
		let response = SelectedSortData.Response(githubUsersModel: [GitHubUserListsModel()])
		
		// when
		presenter.present(sortData: response)
		
		// then
		XCTAssertEqual(viewController.showSortDataCalled, 1, "presenter should call viewController show github user with sort data")
	}
	
	func testPresenterShouldPresentSearchUser() {
		// given
		let response = SearchGithubUser.Response(githubUsersModel: [GitHubUserListsModel()])
		
		// when
		presenter.present(searchUser: response)
		
		// then
		XCTAssertEqual(viewController.showSearchUserCalled, 1, "presenter should call viewController show search github user data")
	}
	
	func testPresenterShouldPresentServerError() {
		// given
		let response = MockServerResponseError(message: "", name: "", status: 99)
		print(response)
		// when
		presenter.present(error: response)
		
		// then
		XCTAssertEqual(viewController.showErrorCalled, 1, "presenter should call viewController show error message")
	}
	
	func testPresenterShouldPresentError() {
		// given
		let response = NSError(domain: "", code: 0, userInfo: ["": ""])
		
		// when
		presenter.present(error: response)
		
		// then
		XCTAssertEqual(viewController.showErrorCalled, 1, "presenter should call viewController show error message")
	}
}
