//
//  GitHubUserListsViewController.swift
//  GitUsers
//
//  Created by Teravat Nepiyachat on 5/4/2564 BE.
//  Copyright (c) 2564 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol GitHubUserListsDisplayLogic: class {
	
}

class GitHubUserListsViewController: UIViewController {
	
	// MARK: - Assembly
	var interactor: IGitHubUserListsInteractor!
	var router: IGitHubUserListsRouter!
	
	// MARK: - IBOutlets
	
	// MARK: - Lifecycle
	deinit {
		print("deinit \("GitHubUserLists")ViewController")
	}
	
	class func newInstance() -> UIViewController {
		let storyboard = UIStoryboard(name: "GitHubUserLists", bundle: nil)
		if let viewController = storyboard.instantiateViewController(withIdentifier: "GitHubUserListsViewController") as? GitHubUserListsViewController {
			viewController.setup()
			return viewController
		}
		return UIViewController()
	}
	
	override func viewDidLoad() {
		super.viewDidLoad()
		title = "GitHubUserLists"
		setupUI()
		setNeedsStatusBarAppearanceUpdate()
	}
	
	override func viewWillAppear(_ animated: Bool) {
		super.viewWillAppear(animated)
		
	}
	
	override var preferredStatusBarStyle: UIStatusBarStyle {
		return .default
	}
	
}

// MARK: - Private

private extension GitHubUserListsViewController {
	
	func setup() {
		let viewController = self
		let presenter = GitHubUserListsPresenter(viewController: viewController)
		let worker = GitHubUserListsWorker()
		let interactor = GitHubUserListsInteractor(presenter: presenter, worker: worker)
		let router = GitHubUserListsRouter()
		viewController.interactor = interactor
		viewController.router = router
	}
	
	func setupUI() {
		
	}
	
}

// MARK: - GitHubUserListsDisplayLogic

extension GitHubUserListsViewController: GitHubUserListsDisplayLogic {
	
}
