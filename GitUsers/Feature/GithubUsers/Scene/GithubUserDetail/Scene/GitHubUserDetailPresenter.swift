//
//  GitHubUserDetailPresenter.swift
//  GitUsers
//
//  Created by Teravat Nepiyachat on 7/4/2564 BE.
//  Copyright (c) 2564 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol IGitHubUserDetailPresenter {
	func present(userProfile response: GetUserProfile.Response)
	func present(repositories response: GetGitHubUserRepos.Response)
	func present(error: Error)
	func present(loadingView response: ShowLoadingView.Response)
}

struct GitHubUserDetailPresenter {
	
	weak var viewController: GitHubUserDetailDisplayLogic?
	
	init(viewController: GitHubUserDetailDisplayLogic?) {
		self.viewController = viewController
	}
	
}

// MARK: - IGitHubUserDetailPresenter

extension GitHubUserDetailPresenter: IGitHubUserDetailPresenter {
	func present(userProfile response: GetUserProfile.Response) {
		let viewModel = GithubUserProfileViewModel(item: response.gitHubUserModel)
		viewController?.show(profile: GetUserProfile.ViewModel(gitHubUserProfileViewModel: viewModel))
	}
	
	func present(repositories response: GetGitHubUserRepos.Response) {
		let viewModel = response.gitHubUserReposModel.compactMap { GithubUserRepositoriesViewModel(item: $0) }
		viewController?.show(repositories: GetGitHubUserRepos.ViewModel(gitHubUserReposViewModel: viewModel))
	}
	
	func present(error: Error) {
		if let serverError = error as? ServerResponseError {
			viewController?.show(error: ErrorViewModel(serverError.name, message: serverError.message))
		} else {
			viewController?.show(error: ErrorViewModel("Message", message: error.localizedDescription))
		}
	}
	
	func present(loadingView response: ShowLoadingView.Response) {
		viewController?.show(loadingView: ShowLoadingView.ViewModel(isShowLoading: response.isShowLoading))
	}
}
